#!/usr/bin/python
# coding=utf-8

'''
Created on Dec 2, 2013

@author: Allis Tauri <allista@gmail.com>
'''

import os
from PBSUtils.PBSJob import BatchFileJob, SerialJob, job_main

class GarliJob(SerialJob, BatchFileJob):
    
    _bin         = '/usr/local/bin/Garli'
    _name        = 'garli_run'
    _description = 'Launch GARLI as a serial job on a cluster. \
                    Accepts several .conf files.'
    _extension   = '.conf'
    
    def _new_job(self, conf_file):
        #get nex filename form conf filename
        nex_file = None
        for line in open(conf_file, 'r'):
            if not line: continue
            words = line.split('=')
            if words[0].strip() == 'datafname':
                nex_file = words[1].strip()
                break
        #check nex file
        if not nex_file:
            print 'No datafname option was found in %s' % conf_file
            return None
        if not os.path.isfile(nex_file):
            print 'No such file: %s' % nex_file
            return None
        #create job file
        job_file = self._jf.create_job([self._bin+' %(file1)s'],
                                       name=nex_file.rstrip('.nex'),
                                       walltime=self._walltime,
                                       stagein_files=[conf_file, nex_file])
        return job_file
    #end def
#end class

if __name__ == '__main__':
    job_main(GarliJob())